{
  "info": {
    "_postman_id": "ca609f22-51a9-4285-acfc-772f2b97bcf0",
    "name": "NotificationCoins",
    "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
  },
  "item": [
    {
      "name": "Notification - Coins - Create",
      "request": {
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "key": "token",
              "value": "BearerToken",
              "type": "string"
            }
          ]
        },
        "method": "POST",
        "header": [
          {
            "key": "",
            "value": "",
            "type": "default",
            "disabled": true
          }
        ],
        "body": {
          "mode": "raw",
          "raw": "{\"sessionId\":\"sessionId\",\"accountId\":\"accountId\",\"name\":\"My Second Coins\",\"description\":\"This coins is my second coins\",\"tags\":\"second,coins\",\"profilePhotoUrl\":\"https://example.com/profile.jpg\",\"coverPhotoUrl\":\"https://example.com/cover.jpg\",\"minimumTipAmount\":10,\"categoryId\":\"category123\",\"category\":\"General\",\"subCategoryId\":\"subCategory456\",\"subCategory\":\"Specific\",\"isCoinsPrivate\":true,\"isTournamentOnly\":false,\"isCoinsDefault\":true,\"isPreLiveNotificationAds\":true,\"isPostLiveNotificationAds\":true,\"breakPreLiveNotificationUrl\":\"https://example.com/break-pre-live.mp4\",\"breakPostLiveNotificationUrl\":\"https://example.com/break-post-live.mp4\"}",
          "options": {
            "raw": {
              "language": "json"
            }
          }
        },
        "url": {
          "raw": "http://localhost:3000/api/notification/coins/create",
          "host": [
            "localhost:3000"
          ],
          "path": [
            "api",
            "notification",
            "coins",
            "create"
          ]
        },
        "description": "This endpoint is called \"Notification - Coins - Create\". Let me provide the details about each part of the data provided.\n\n1. `name`: It is the name of the endpoint. \n\n2. `request`: This object represents the request to be made.\n\n3. `auth`: The `auth` object contains information related to the authentication method used for this request. \n\n   - `type` is \"bearer\" indicating that bearer token is used for authentication.\n   \n   - `\"bearer\"` is an array that holds an object with the `key` of `\"token\"`, and the `value` of `\"BearerToken\"`, indicating where the bearer token is to be added for authentication.\n\n4. `method`: The HTTP method for the request is `POST`.\n\n5. `url`: The URL where the request is to be sent. In this case, it is `\"http://localhost:3000/api/notification/coins/create\"`.\n\n6. `headers`: An array containing the HTTP headers to be sent with the request. Here, it is set to default and disabled.\n\n7. `body`: The `body` object includes the body payload for the request.\n\n   - `mode`: The mode of the inputted body, which here is \"raw\".\n   \n   - `raw`: It includes the JSON string to be sent with the request.\n   \n   - `options`: An object that specifies the options for the body payload. Here, it shows that the language for the `raw` payload is json.\n\nInside the `raw` field we have the payload to the `POST` request. The payload contains various properties:\n\n- `sessionId`: A session identifier.\n\n- `accountId`: An account identifier.\n\n- `name`: Name of the coins.\n\n- `description`: Description about the coins.\n\n- `tags`: Keywords related to the coins.\n\n- `profilePhotoUrl`: URL of the profile image for these coins.\n\n- `coverPhotoUrl`: URL of the cover image for these coins.\n\n- `minimumTipAmount`: The minimum amount for which the coins can be tipped.\n\n- `categoryId & category`: Identifier and name of the category to which these coins belong.\n\n- `subCategoryId & subCategory`: Identifier and name of the sub-category to which these coins belong.\n\n- `isCoinsPrivate`: Boolean flag to indicate whether these coins are private or not.\n\n- `isTournamentOnly`: Boolean flag to indicate whether the coins are only for tournaments.\n\n- `isCoinsDefault`: Boolean flag for marking the coins as default.\n\n- `isPreLiveNotificationAds & isPostLiveNotificationAds`: These boolean flags are for indicating if there are Pre-Live and Post-Live Notification Ads.\n\n- `breakPreLiveNotificationUrl & breakPostLiveNotificationUrl`: These are URLs for the break pre-live and break post-live notifications respectively. \n\nPlease note that the actual value for these properties may vary based on your requirement."
      },
      "response": []
    },
    {
      "name": "Notification - Coins - Update",
      "request": {
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "key": "token",
              "value": "BearerToken",
              "type": "string"
            }
          ]
        },
        "method": "PUT",
        "header": [
          {
            "key": "Client-UUID",
            "value": "ClientUUID",
            "type": "default"
          }
        ],
        "body": {
          "mode": "raw",
          "raw": "{\"coinsId\":\"coinsId\", \"sessionId\":\"sessionId\",\"accountId\":\"accountId\",\"name\":\"My Second Coins 2.0\",\"description\":\"This coins is my second coins\",\"tags\":\"second,coins\",\"profilePhotoUrl\":\"https://example.com/profile.jpg\",\"coverPhotoUrl\":\"https://example.com/cover.jpg\",\"minimumTipAmount\":10,\"categoryId\":\"category123\",\"category\":\"General\",\"subCategoryId\":\"subCategory456\",\"subCategory\":\"Specific\",\"isCoinsPrivate\":true,\"isTournamentOnly\":false,\"isCoinsDefault\":true,\"isPreLiveNotificationAds\":true,\"isPostLiveNotificationAds\":true,\"breakPreLiveNotificationUrl\":\"https://example.com/break-pre-live.mp4\",\"breakPostLiveNotificationUrl\":\"https://example.com/break-post-live.mp4\"}"
        },
        "url": {
          "raw": "http://localhost:3000/api/notification/coins/update",
          "host": [
            "localhost:3000"
          ],
          "path": [
            "api",
            "notification",
            "coins",
            "update"
          ]
        },
        "description": "This endpoint is named \"Notification - Coins - Update\". It's a PUT request used to alter the details of certain coin notifications.\n\nThe \"Auth\" field specifies the type of authentication required, which is of \"bearer\" type. There's also a \"bearer\" attribute that holds an array of objects. In that array, there's an object which has a key \"token\", with value being \"BearerToken\" of a string type.\n\n\"Method\" field indicates that the HTTP method used here is \"PUT\".\n\n\"Url\" field describes the URL where the API request is sent. The given URL here is \"http://localhost:3000/api/notification/coins/update\".\n\nIn the \"Headers\", there's a key named \"Client-UUID\" with a value of \"ClientUUID\". This is of default type.\n\nIn the \"Body\" section, the \"Mode\" field specifies that the data sent to the server is raw JSON data. \n\nThe \"Raw\" field contains the actual data sent to the server in JSON format. It includes:\n- \"coinsId\": ID of the coin.\n- \"sessionId\": It refers to ID of the current session.\n- \"accountId\": An account identifier.\n- \"name\": Name of the coin.\n- \"description\": Detailed info about the coin.\n- \"tags\": Relevant tags for the coin.\n- \"profilePhotoUrl\": URL of the profile picture for the coins.\n- \"coverPhotoUrl\": URL of the cover picture for the coins.\n- \"minimumTipAmount\": Smallest amount of tip allowed.\n- \"categoryId\" and \"category\": Unique ID and name of the category the coin falls under respectively.\n- \"subCategoryId\" and \"subCategory\": ID and name of the subcategory the coin pertains to.\n- \"isCoinsPrivate\": Boolean to indicate if the coins are private or not.\n- \"isTournamentOnly\": Boolean field to indicate if the coins are only for tournaments.\n- \"isCoinsDefault\": Boolean field that shows if the given coins are assigned as default.\n- \"isPreLiveNotificationAds\" and \"isPostLiveNotificationAds\": Boolean fields to indicate if pre-live and post-live notification ads are enabled.\n- \"breakPreLiveNotificationUrl\" and \"breakPostLiveNotificationUrl\": URLs to the media files that should be played during pre-live and post-live notification breaks."
      },
      "response": []
    },
    {
      "name": "Notification - Coins - Get",
      "protocolProfileBehavior": {
        "disableBodyPruning": true
      },
      "request": {
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "key": "token",
              "value": "BearerToken",
              "type": "string"
            }
          ]
        },
        "method": "GET",
        "header": [
          {
            "key": "",
            "value": "",
            "type": "default",
            "disabled": true
          }
        ],
        "body": {
          "mode": "raw",
          "raw": ""
        },
        "url": {
          "raw": "http://localhost:3000/api/notification/coins/get/?coinsId=coinsId&sessionId=sessionId&accountId=accountId",
          "host": [
            "localhost:3000"
          ],
          "path": [
            "api",
            "notification",
            "coins",
            "get",
            ""
          ],
          "query": [
            {
              "key": "coinsId",
              "value": "coinsId"
            },
            {
              "key": "sessionId",
              "value": "sessionId"
            },
            {
              "key": "accountId",
              "value": "accountId"
            }
          ]
        },
        "description": "The data provided represents a GET request endpoint for the \"/api/notification/coins/get/\" route, and includes authentication, request method, url, headers, and body. Let's analyze each separately:\n\n1. \"name\": This defines the name of the API endpoint, which in this case, is \"Notification - Coins - Get\". This is used for easy understanding and identification of this particular endpoint.\n\n2. \"request\": This is the object that contains all the request details.\n\n   - \"auth\": Describes the method used for the authentication of the request.\n\n     - \"type\": Here \"bearer\" indicates the type of authentication method used, which signifies that a bearer token is required.\n\n     - \"bearer\": An array with an object that contains the key-value pair for the bearer token.\n\n       - \"key\": The key is named \"token\", which will be used to pass in the bearer token.\n\n       - \"value\": The value is \"BearerToken\", indicating that a bearer token should be provided here.\n\n       - \"type\": Defines the data type of this field, which in this case, it's a string.\n\n   - \"method\": Represents the HTTP method for the request, which is GET in this scenario.\n\n   - \"url\": Contains the exact URL to be hit for the API to respond. The string includes in it placeholder tokens representing \"coinsId\", \"sessionId\", and \"accountId\" these will need to be replaced by actual values.\n\n   - \"headers\": An array of key-value pairs meant to provide additional context or input to the request. Currently empty and disabled by default. These can include data like 'Content-Type' or 'Accept-Language'.\n\n   - \"body\": Defines the data that will be sent as the request body. \n\n     - \"mode\": Defines the mode of the body, which is \"raw\" in this case.\n\n     - \"raw\": This is where you'd place the raw data to be sent in the body of the request, currently, it's empty.\n\nEach of the elements in this data set has a unique and specific purpose, and understanding each one is crucial when creating or debugging API requests. It can be edited to match the specific demands of the specific API request."
      },
      "response": []
    },
    {
      "name": "Notification - Coins - Get All",
      "protocolProfileBehavior": {
        "disableBodyPruning": true
      },
      "request": {
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "key": "token",
              "value": "BearerToken",
              "type": "string"
            }
          ]
        },
        "method": "GET",
        "header": [
          {
            "key": "",
            "value": "",
            "type": "default",
            "disabled": true
          }
        ],
        "body": {
          "mode": "raw",
          "raw": ""
        },
        "url": {
          "raw": "http://localhost:3000/api/notification/coins/all/?sessionId=sessionId&accountId=accountId",
          "host": [
            "localhost:3000"
          ],
          "path": [
            "api",
            "notification",
            "coins",
            "all",
            ""
          ],
          "query": [
            {
              "key": "sessionId",
              "value": "sessionId"
            },
            {
              "key": "accountId",
              "value": "accountId"
            }
          ]
        },
        "description": "The endpoint \"Notification - Coins - Get All\", as its name suggests, is used to retrieve all coin notifications data. Here's a detailed description of each data in this endpoint:\n\n1. **name**: This is the identifier or name of the endpoint. In this case, the endpoint's name is \"Notification - Coins - Get All\".\n\n2. **request**: This object contains all the details of the request to be made to the endpoint.\n\n   - **auth**: This attribute contains the authentication type and details required by the endpoint.\n    \n     - **type**: This declares the type of authentication needed for the endpoint. In this case, it is \"bearer\".\n    \n     - **bearer**: This is an array that carries the authentication key and values.\n        \n       - **key**: Specifies the key for authentication which is \"token\" in this case.\n        \n       - **value**: Contains the actual value of the bearer token authentication, known as \"BearerToken\".\n        \n       - **type**: The type of the value, in this case, the BearerToken value is a string.\n\n   - **method**: Defines the HTTP method required for the request. In this case, it's \"GET\", which is used to retrieve data from the server.\n\n   - **url**: This is the Uniform Resource Locator where the request will be sent. Parameters/sessions could be appended to these URLs. Here, \"sessionId\" and \"accountId\" are the query parameters used.\n\n   - **headers**: This contains any headers that should be included in the request. The headers are currently empty and disabled in this case.\n\n   - **body**: This contains the body of the request. It is set to \"raw\" mode, meaning any data inside \"raw\" will be sent as is; however, the \"raw\" field is currently empty for this endpoint.\n"
      },
      "response": []
    },
    {
      "name": "Notification - Coins - Delete",
      "request": {
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "key": "token",
              "value": "sessionId",
              "type": "string"
            }
          ]
        },
        "method": "POST",
        "header": [
          {
            "key": "",
            "value": "",
            "type": "default",
            "disabled": true
          }
        ],
        "body": {
          "mode": "raw",
          "raw": "{\"sessionId\":\"sessionId\",\"accountId\":\"accountId\",\"coinsId\":\"coinsId\"}"
        },
        "url": {
          "raw": "http://localhost:3000/api/notification/coins/delete",
          "host": [
            "localhost:3000"
          ],
          "path": [
            "api",
            "notification",
            "coins",
            "delete"
          ]
        },
        "description": "This endpoint, titled \"Notification - Coins - Delete\", is designed for sending a POST request to delete a certain coin notification. \n\nTo begin with, you'll find the `auth` object which requires a \"bearer\" type token for authentication. Within the `auth` object, there is a single `bearer` item which holds three attributes: \"key\", \"value\", and \"type\". \n\n- \"key\": It holds the value \"token\", which identifies the type of the bearer token. \n- \"value\": It holds the placeholder \"sessionId\", indicating the actual token value should be the user session ID. \n- \"type\": Defines the type of the value; here it's identified as a \"string\".\n\nThe `method` field is set to \"POST\", indicating that this is a POST request.\n\nThe `url` field signifies the location at where the request is to be sent, with this API endpoint being located at \"http://localhost:3000/api/notification/coins/delete\".\n\nUnder the `headers` section, there is an empty default value. The \"key\" and the \"value\" are both blank and it's currently disabled. Most likely used for adding any additional information if required in the future.\n\nLastly, we have the `body` section. \n\n- It is in RAW mode which means you can input JSON data directly. \n- The `raw` field contains a JSON object string. This JSON object has three properties: \"sessionId\", \"accountId\" and \"coinsId\". \n\n  - \"sessionId\": Represents the session ID of the currently logged-in user making the request; it must match the token used in the auth field.\n  - \"accountId\": Identifies the account for which the coin notification is to be deleted.\n  - \"coinsId\": This indicates the specific ID of the coin notification to be deleted from the mentioned accountId. \n\nFor these properties to function correctly, they must be replaced with actual values before sending the request."
      },
      "response": []
    }
  ]
}