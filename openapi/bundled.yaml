openapi: 3.0.0
info:
  title: ActionEarn
  version: 1.0.0
servers:
  - url: http://localhost:3000
security:
  - bearerAuth: []
paths:
  /api/action/earn/create:
    post:
      tags:
        - General
      summary: Action - Earn - Create
      description: This endpoint is used to create a new earning action. It requires session and account identifiers, as well as details about the target and source of the earning. The utility type (e.g., points) and token amount can also be specified.
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                sessionId: sessionId
                accountId: accountId
                path: /live/channel/video123
                targetType: videoId
                targetId: videoId
                sourceType: accountId
                sourceId: accountId
                didEarn: false
                utilityType: points
                tokenAmount: 10
                name: ''
                description: ''
                tags: ''
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /api/action/earn/update:
    put:
      tags:
        - General
      summary: Action - Earn - Update
      description: This endpoint is used to update an existing earning action. It requires the earning ID, session and account identifiers, and details about the target, source, and updates such as token amount and name.
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                sessionId: sessionId
                accountId: accountId
                path: /live/channel/video123
                targetType: videoId
                targetId: videoId
                sourceType: accountId
                sourceId: accountId
                didEarn: false
                utilityType: points
                tokenAmount: 20
                name: update
                description: ''
                tags: ''
                earnId: earnId
      security:
        - bearerAuth: []
      parameters:
        - name: Client-UUID
          in: header
          schema:
            type: string
          example: ClientUUID
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /api/action/earn/get:
    get:
      tags:
        - General
      summary: Action - Earn - Get
      description: This endpoint retrieves details of a specific earning action. It requires the earning ID, session ID, and account ID as query parameters.
      security:
        - bearerAuth: []
      parameters:
        - name: earnId
          in: query
          schema:
            type: string
          example: earnId
        - name: sessionId
          in: query
          schema:
            type: string
          example: sessionId
        - name: accountId
          in: query
          schema:
            type: string
          example: accountId
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /api/action/earn/all:
    get:
      tags:
        - General
      summary: Action - Earn - Get All
      description: This endpoint retrieves all earning actions associated with a specific session and account. It uses session and account IDs as query parameters.
      security:
        - bearerAuth: []
      parameters:
        - name: sessionId
          in: query
          schema:
            type: string
          example: sessionId
        - name: accountId
          in: query
          schema:
            type: string
          example: accountId
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /api/action/earn/delete:
    post:
      tags:
        - General
      summary: Action - Earn - Delete
      description: This endpoint deletes a specific earning action. It requires the session ID, account ID, and earning ID in the request body.
      requestBody:
        content:
          '*/*':
            schema:
              type: string
              example: '"{\"sessionId\":\"sessionId\",\"accountId\":\"accountId\",\"earnId\":\"earnId\"}"'
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
