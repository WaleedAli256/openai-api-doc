{
  "info": {
    "_postman_id": "ca609f22-51a9-4285-acfc-772f2b97bcf0",
    "name": "ReportsEarning",
    "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
  },
  "item": [
    {
      "name": "Reports - Earning - Create",
      "request": {
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "key": "token",
              "value": "BearerToken",
              "type": "string"
            }
          ]
        },
        "method": "POST",
        "header": [
          {
            "key": "",
            "value": "",
            "type": "default",
            "disabled": true
          }
        ],
        "body": {
          "mode": "raw",
          "raw": "{\"sessionId\":\"sessionId\",\"accountId\":\"accountId\",\"name\":\"My Second Earning\",\"description\":\"This earning is my second earning\",\"tags\":\"second,earning\",\"profilePhotoUrl\":\"https://example.com/profile.jpg\",\"coverPhotoUrl\":\"https://example.com/cover.jpg\",\"minimumTipAmount\":10,\"categoryId\":\"category123\",\"category\":\"General\",\"subCategoryId\":\"subCategory456\",\"subCategory\":\"Specific\",\"isEarningPrivate\":true,\"isTournamentOnly\":false,\"isEarningDefault\":true,\"isPreLiveReportsAds\":true,\"isPostLiveReportsAds\":true,\"breakPreLiveReportsUrl\":\"https://example.com/break-pre-live.mp4\",\"breakPostLiveReportsUrl\":\"https://example.com/break-post-live.mp4\"}",
          "options": {
            "raw": {
              "language": "json"
            }
          }
        },
        "url": {
          "raw": "http://localhost:3000/api/reports/earning/create",
          "host": [
            "localhost:3000"
          ],
          "path": [
            "api",
            "reports",
            "earning",
            "create"
          ]
        },
        "description": "This endpoint is called \"Reports - Earning - Create\". It is used to create a new earning report. This is a POST method API call.\n\nFor authorization, it uses bearer token authentication. You have to provide a Bearer token in the 'token' key. The value for the key in this case is 'BearerToken' and the type of value is a 'string'.\n\nThe URL for this API call is \"http://localhost:3000/api/reports/earning/create\". The base URL (http://localhost:3000) may vary depending on where your server is actually located.\n\nThis API call doesn't require any headers, as indicated by the blank 'key' and 'value' fields in the 'headers' section.\n\nIn the body of the request, you must provide the following data in raw JSON format:\n\n- \"sessionId\": This is the unique identifier of the session.\n- \"accountId\": This is the unique identifier of the account.\n- \"name\": This is the name of the earning, in this case it is 'My Second Earning'.\n- \"description\": This is the description of the earning.\n- \"tags\": These are the associated tags for the earning.\n- \"profilePhotoUrl\" and \"coverPhotoUrl\": These are the URLs of the profile and cover photos respectively.\n- \"minimumTipAmount\": This is the minimum tip amount.\n- \"categoryId\" and \"subCategoryId\": These are the identifiers for the category and subcategory respectively.\n- \"category\" and \"subCategory\": These are the names of the category and subcategory.\n- \"isEarningPrivate\": This is a boolean value specifying whether the earning is private or not.\n- \"isTournamentOnly\": This is a boolean value specifying whether the report is only for tournaments.\n- \"isEarningDefault\": This is a boolean value specifying whether this is a default earning.\n- \"isPreLiveReportsAds\" and \"isPostLiveReportsAds\": These boolean values specify whether there are pre-live and post-live ads respectively.\n- \"breakPreLiveReportsUrl\" and \"breakPostLiveReportsUrl\": These are URLs where pre-live and post-live reports can be accessed respectively. \n\nThe language to be used for the raw data is JSON."
      },
      "response": []
    },
    {
      "name": "Reports - Earning - Update",
      "request": {
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "key": "token",
              "value": "BearerToken",
              "type": "string"
            }
          ]
        },
        "method": "PUT",
        "header": [
          {
            "key": "Client-UUID",
            "value": "ClientUUID",
            "type": "default"
          }
        ],
        "body": {
          "mode": "raw",
          "raw": "{\"earningId\":\"earningId\", \"sessionId\":\"sessionId\",\"accountId\":\"accountId\",\"name\":\"My Second Earning 2.0\",\"description\":\"This earning is my second earning\",\"tags\":\"second,earning\",\"profilePhotoUrl\":\"https://example.com/profile.jpg\",\"coverPhotoUrl\":\"https://example.com/cover.jpg\",\"minimumTipAmount\":10,\"categoryId\":\"category123\",\"category\":\"General\",\"subCategoryId\":\"subCategory456\",\"subCategory\":\"Specific\",\"isEarningPrivate\":true,\"isTournamentOnly\":false,\"isEarningDefault\":true,\"isPreLiveReportsAds\":true,\"isPostLiveReportsAds\":true,\"breakPreLiveReportsUrl\":\"https://example.com/break-pre-live.mp4\",\"breakPostLiveReportsUrl\":\"https://example.com/break-post-live.mp4\"}"
        },
        "url": {
          "raw": "http://localhost:3000/api/reports/earning/update",
          "host": [
            "localhost:3000"
          ],
          "path": [
            "api",
            "reports",
            "earning",
            "update"
          ]
        },
        "description": "This endpoint is named \"Reports - Earning - Update\". It uses the PUT HTTP method to update an existing earning report. The URL for this endpoint is \"http://localhost:3000/api/reports/earning/update\".\n\nThis endpoint requires bearer token authentication. You must provide a valid bearer token in the 'auth' field which contains the key named 'token', and the value field should contain the actual bearer token.\n\nThere is a header key that must be included named \"Client-UUID\". Its value should be the Unique Identifier (UUID) of the client making the request.\n\nThe main body of the request must be in raw JSON format and contains the following properties:\n\n1. \"earningId\": The unique identifier of the earning report to be updated.\n2. \"sessionId\": The identifier for the session linked with this earning.\n3. \"accountId\": The account identifier linked to this earning.\n4. \"name\": The updated name of the earning. \n5. \"description\": The updated description of the earning.\n6. \"tags\": The updated set of tags for the earning, separated by commas.\n7. \"profilePhotoUrl\": The updated URL of the profile photo.\n8. \"coverPhotoUrl\": The updated URL of the cover photo.\n9. \"minimumTipAmount\": The updated minimum tip amount for this earning.\n10. \"categoryId\": The identifier of the updated category this earning belongs to.\n11. \"category\": The updated category name this earning belongs to.\n12. \"subCategoryId\": The identifier of the updated sub-category this earning belongs to.\n13. \"subCategory\": The updated sub-category name this earning belongs to.\n14. \"isEarningPrivate\": A boolean value indicating if this earning is private.\n15. \"isTournamentOnly\": A boolean value indicating if this earning is applicable only to tournaments.\n16. \"isEarningDefault\": A boolean value indicating if this earning is set as default.\n17. \"isPreLiveReportsAds\": A boolean value to decide whether to show pre-live report ads.\n18. \"isPostLiveReportsAds\": A boolean value to decide whether to show ads after publishing the live report.\n19. \"breakPreLiveReportsUrl\": URL of the ad to be displayed before publishing the live report.\n20. \"breakPostLiveReportsUrl\": URL of the ad to be displayed after publishing the live report. \n\nJson body needs to be properly formatted with these correct data keys and values."
      },
      "response": []
    },
    {
      "name": "Reports - Earning - Get",
      "protocolProfileBehavior": {
        "disableBodyPruning": true
      },
      "request": {
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "key": "token",
              "value": "BearerToken",
              "type": "string"
            }
          ]
        },
        "method": "GET",
        "header": [
          {
            "key": "",
            "value": "",
            "type": "default",
            "disabled": true
          }
        ],
        "body": {
          "mode": "raw",
          "raw": ""
        },
        "url": {
          "raw": "http://localhost:3000/api/reports/earning/get/?earningId=earningId&sessionId=sessionId&accountId=accountId",
          "host": [
            "localhost:3000"
          ],
          "path": [
            "api",
            "reports",
            "earning",
            "get",
            ""
          ],
          "query": [
            {
              "key": "earningId",
              "value": "earningId"
            },
            {
              "key": "sessionId",
              "value": "sessionId"
            },
            {
              "key": "accountId",
              "value": "accountId"
            }
          ]
        },
        "description": "This endpoint is titled \"Reports - Earning - Get\". It performs a GET request which is commonly used to retrieve information from a specific resource.\n\nThe request is authenticated using Bearer authentication, which is often used for API tokens. The key for auth is 'token' and its value is 'BearerToken', with the data type being a string.\n\nThe API's base URL for this request is \"http://localhost:3000/api/reports/earning/get/\". Upon it, there are three parameters:\n\n1. 'earningId': An identifier for the specific earnings report you're trying to retrieve.\n2. 'sessionId': This could be an identifier for the current session or user that is making the request.\n3. 'accountId': It is probably an identifier for the user or system that owns this particular earnings report.\n\nIn terms of headers, currently, none are set for this request; the fields are left empty and it's set as 'disabled' which means this header won't affect the request.\n\nLastly, it shows that the 'body' of the request is in the 'raw' mode, but it's not sending any data as the 'raw' field is empty. In other words, no data is being sent in the body of this API request."
      },
      "response": []
    },
    {
      "name": "Reports - Earning - Get All",
      "protocolProfileBehavior": {
        "disableBodyPruning": true
      },
      "request": {
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "key": "token",
              "value": "BearerToken",
              "type": "string"
            }
          ]
        },
        "method": "GET",
        "header": [
          {
            "key": "",
            "value": "",
            "type": "default",
            "disabled": true
          }
        ],
        "body": {
          "mode": "raw",
          "raw": ""
        },
        "url": {
          "raw": "http://localhost:3000/api/reports/earning/all/?sessionId=sessionId&accountId=accountId",
          "host": [
            "localhost:3000"
          ],
          "path": [
            "api",
            "reports",
            "earning",
            "all",
            ""
          ],
          "query": [
            {
              "key": "sessionId",
              "value": "sessionId"
            },
            {
              "key": "accountId",
              "value": "accountId"
            }
          ]
        },
        "description": "This endpoint is labelled \"Reports - Earning - Get All\". It is designed to generate a report of all earnings. Here's a breakdown of the different data elements in this endpoint:\n\n1. **auth**: The endpoint uses a Bearer token for authorization. This means you need to provide a specific token in the request header to access this API endpoint. The Bearer token is of the type 'string' and named \"token\".\n\n2. **method**: The HTTP method used for this API request is GET. This means the API will retrieve data based on the given request.\n\n3. **url**: This is the URL where the request will be sent. It is http://localhost:3000/api/reports/earning/all/. Two query parameters are included: `sessionId` and `accountId`. You need to replace 'sessionId' and 'accountId' with actual values representing the session ID and account ID respectively, for the request to work correctly.\n\n4. **headers**: No specific headers are required for this request. A default empty header is included but it's currently disabled.\n\n5. **body**: As indicated by 'raw' in 'mode' field, this GET request does not require a body payload to be sent along with the request. It's expected to retrieve data solely based on the URL and parameters provided.\n\nRemember to replace \"BearerToken\", \"sessionId\", and \"accountId\" with actual values when implementing this API call."
      },
      "response": []
    },
    {
      "name": "Reports - Earning - Delete",
      "request": {
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "key": "token",
              "value": "sessionId",
              "type": "string"
            }
          ]
        },
        "method": "POST",
        "header": [
          {
            "key": "",
            "value": "",
            "type": "default",
            "disabled": true
          }
        ],
        "body": {
          "mode": "raw",
          "raw": "{\"sessionId\":\"sessionId\",\"accountId\":\"accountId\",\"earningId\":\"earningId\"}"
        },
        "url": {
          "raw": "http://localhost:3000/api/reports/earning/delete",
          "host": [
            "localhost:3000"
          ],
          "path": [
            "api",
            "reports",
            "earning",
            "delete"
          ]
        },
        "description": "**Endpoint Name:**\n\nReports - Earning - Delete: An endpoint for deleting earning reports.\n\n**Request:**\n\n- Authentication: The API endpoint uses bearer token authentication. Ensure that the bearer token you provide here is a valid session identifier. In the input data, you'll find a `key` titled `token` with a `value` identifier named `sessionId`. The `type` of these data fields is a string.\n\n- Method: The HTTP request method for this endpoint is POST, used primarily to send data to the server to create/update a resource.\n\n- URL: The URL to communicate with the API is `http://localhost:3000/api/reports/earning/delete`. This endpoint specifically deals with deleting earning reports.\n\n- Headers: The headers here include a default `key` and `value` pair which are both empty and disabled, implying that no additional headers are required for this particular API call.\n\n**Body:**\n\nThis refers to the actual content or data you're sending to the server through your HTTP request, containing the following information:\n\n- Mode: The mode of the data encapsulated in the body of this request is identified as `raw`. In simple terms, this implies that the data is sent in an unprocessed manner, as a string of text.\n\n- Raw: The `Raw` field is where the actual data to be sent to the server is embedded. In this case, the raw data is in JSON format and it contains three strings: `sessionId`, `accountId`, and `earningId`. These are all identifiers; `sessionId` pertains to the session in context, `accountId` relates to the user account and `earningId` is the unique identifier for the specific earning report you wish to delete."
      },
      "response": []
    }
  ]
}