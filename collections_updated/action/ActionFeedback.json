{
  "info": {
    "_postman_id": "bebf3611-1f3d-423e-bb9f-1a03938f6fe2",
    "name": "ActionFeedback",
    "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
    "_exporter_id": "34018343"
  },
  "item": [
    {
      "name": "Action - Feedback - Create",
      "request": {
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "key": "token",
              "value": "BearerToken",
              "type": "string"
            }
          ]
        },
        "method": "POST",
        "header": [
          {
            "key": "",
            "value": "",
            "type": "default",
            "disabled": true
          }
        ],
        "body": {
          "mode": "raw",
          "raw": "{\n    \"sessionId\": \"sessionId\",\n    \"accountId\": \"accountId\",\n    \"path\": \"/live/channel/video123\",\n    \"targetType\": \"videoId\",\n    \"targetId\": \"videoId\",\n    \"sourceType\": \"accountId\",\n    \"sourceId\": \"accountId\",\n    \"didFeedback\": false,\n    \"category\": \"Entertainment\",\n    \"subCategory\": \"Music\",\n    \"subject\": \"Video Feedback\",\n    \"title\": \"Great Performance\",\n    \"name\": \"John Doe\",\n    \"description\": \"The video was amazing, the performance was top-notch!\",\n    \"tags\": \"music, live performance, trending\",\n    \"didReply\": false,\n    \"didReview\": true,\n    \"replyText\": \"\",\n    \"reviewStars\": 5\n}\n",
          "options": {
            "raw": {
              "language": "json"
            }
          }
        },
        "url": {
          "raw": "http://localhost:3000/api/action/feedback/create",
          "host": [
            "localhost:3000"
          ],
          "path": [
            "api",
            "action",
            "feedback",
            "create"
          ]
        },
        "description": "### Action - Feedback - Create Endpoint\n\n**Request Details:**\n\n- **Authentication**: The request requires bearer token authentication. The token should be provided in the authorization header.\n  - **Key**: `token`\n  - **Value**: `BearerToken` (this should be replaced with a valid token)\n  - **Type**: The type of authentication being used, which is a string.\n\n- **HTTP Method**: This request uses the POST method to send data to the server.\n\n- **URL**: The endpoint for creating feedback is `http://localhost:3000/api/action/feedback/create`. Make sure the server is running on localhost and the correct port is specified.\n\n- **Headers**: There are no specific headers required except for the bearer token. One default header is present but disabled, which means it won’t be sent.\n\n**Body Parameters**: The body of the request contains the following fields in JSON format:\n\n- **sessionId**: A unique identifier for the session during which the feedback is being submitted.\n  \n- **accountId**: The identifier associated with the user account providing the feedback.\n\n- **path**: The path representation of the resource that the feedback is related to. For example, it could reference the location of a video.\n\n- **targetType**: Specifies the type of target the feedback is directed towards, in this case, it is set to \"videoId\".\n\n- **targetId**: The identifier of the video that the feedback is about.\n\n- **sourceType**: Indicates the type of source the feedback is coming from, which is also set to \"accountId\" in this case.\n\n- **sourceId**: This is the identifier for the source account that is providing the feedback.\n\n- **didFeedback**: A boolean value indicating whether the user has previously provided feedback. Defaults to false.\n\n- **category**: Specifies the main category of the feedback, such as \"Entertainment\".\n\n- **subCategory**: A more specific classification under the main category, in this case it's \"Music\".\n\n- **subject**: The subject of the feedback. For example, this could be a description of what the feedback pertains to, set to \"Video Feedback\".\n\n- **title**: A short title or summary of the feedback provided, in this case \"Great Performance\".\n\n- **name**: The name of the user who is providing the feedback, in this instance \"John Doe\".\n\n- **description**: A detailed description of the feedback. For example, \"The video was amazing, the performance was top-notch!\".\n\n- **tags**: Keywords associated with the feedback that help categorize it, such as \"music, live performance, trending\".\n\n- **didReply**: A boolean flag that indicates whether a reply has been provided in response to the feedback. Initially set to false.\n\n- **didReview**: A boolean value indicating if the feedback included a review. This is set to true in this case.\n\n- **replyText**: If applicable, this field would contain the text of any reply provided. It's currently set to an empty string, indicating no reply has been given.\n\n- **reviewStars**: A numeric rating given in stars (out of a possible maximum, typically 5 stars). In this case, the rating is set to 5.\n\n### Summary\nThis endpoint allows users to submit feedback related to videos, including categorization, detailed descriptions, and ratings. Users need to provide a valid bearer token for authentication, and all data must be formatted in JSON."
      },
      "response": []
    },
    {
      "name": "Action - Feedback - Update",
      "request": {
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "key": "token",
              "value": "BearerToken",
              "type": "string"
            }
          ]
        },
        "method": "PUT",
        "header": [
          {
            "key": "Client-UUID",
            "value": "ClientUUID",
            "type": "default"
          }
        ],
        "body": {
          "mode": "raw",
          "raw": "{\n    \"sessionId\": \"sessionId\",\n    \"accountId\": \"accountId\",\n    \"path\": \"/live/channel/video123\",\n    \"targetType\": \"videoId\",\n    \"targetId\": \"videoId\",\n    \"sourceType\": \"accountId\",\n    \"sourceId\": \"accountId\",\n    \"didFeedback\": false,\n    \"category\": \"Entertainment\",\n    \"subCategory\": \"Music\",\n    \"subject\": \"Video Feedback\",\n    \"title\": \"Great Performance\",\n    \"name\": \"John Doe\",\n    \"description\": \"The video was amazing, the performance was top-notch!\",\n    \"tags\": \"music, live performance, trending\",\n    \"didReply\": true,\n    \"didReview\": true,\n    \"replyText\": \"this is updated reply\",\n    \"reviewStars\": 2,\n    \"feedbackId\": \"feedbackId\"\n}",
          "options": {
            "raw": {
              "language": "json"
            }
          }
        },
        "url": {
          "raw": "http://localhost:3000/api/action/feedback/update",
          "host": [
            "localhost:3000"
          ],
          "path": [
            "api",
            "action",
            "feedback",
            "update"
          ]
        },
        "description": "### Action - Feedback - Update Endpoint Description\n\nThis endpoint allows users to update feedback related to a specific action. Below are the details of each data field included in the request.\n\n#### Request Method\n- **Method**: PUT\n  - This indicates that the operation is intended to update an existing resource.\n\n#### Request URL\n- **URL**: `http://localhost:3000/api/action/feedback/update`\n  - This is the endpoint where the feedback update request is sent.\n\n#### Request Authentication\n- **Auth Type**: Bearer Token\n  - **Key**: `token`\n    - This is the authentication key used to securely identify the user making the request.\n  - **Value**: `BearerToken`\n    - This value should be replaced with an actual bearer token for authorization.\n\n#### Request Headers\n- **Header Key**: `Client-UUID`\n  - This is a unique identifier for the client making the request.\n- **Value**: `ClientUUID`\n  - This should be replaced with the actual UUID of the client.\n\n#### Request Body\n- **Body Mode**: Raw\n  - The body of the request is sent in a raw format as JSON.\n\n##### Body Fields:\n- **sessionId**: `sessionId`\n  - An identifier for the session during which the feedback was given. This should be replaced with the actual session identifier.\n\n- **accountId**: `accountId`\n  - The unique identifier associated with the user account giving the feedback.\n\n- **path**: `/live/channel/video123`\n  - The path to the resource for which feedback is being provided. This typically includes the context for the feedback, such as a URL to a video.\n\n- **targetType**: `videoId`\n  - Specifies the type of resource the feedback is targeting. In this case, it refers to a video.\n\n- **targetId**: `videoId`\n  - The unique identifier of the target resource that is receiving the feedback.\n\n- **sourceType**: `accountId`\n  - Defines the type of source providing the feedback. It’s usually associated with user accounts.\n\n- **sourceId**: `accountId`\n  - The unique identifier of the feedback source.\n\n- **didFeedback**: `false`\n  - A boolean indicating whether the user has provided feedback. Default is false.\n\n- **category**: `Entertainment`\n  - The primary category under which the feedback falls.\n\n- **subCategory**: `Music`\n  - A more specific categorization of the content related to the feedback.\n\n- **subject**: `Video Feedback`\n  - A brief title summarizing the purpose of the feedback.\n\n- **title**: `Great Performance`\n  - The title of the feedback, summarizing the user's experience or sentiment.\n\n- **name**: `John Doe`\n  - The name of the user providing the feedback.\n\n- **description**: `The video was amazing, the performance was top-notch!`\n  - A detailed description of the feedback, explaining the user's reaction or thoughts regarding the content.\n\n- **tags**: `music, live performance, trending`\n  - A set of keywords related to the feedback, used for categorization and search purposes.\n\n- **didReply**: `true`\n  - A boolean indicating whether there was a response to the original feedback.\n\n- **didReview**: `true`\n  - A boolean indicating whether the user has left a review for the video.\n\n- **replyText**: `this is updated reply`\n  - Text of the reply provided to the feedback, which can be updated as needed.\n\n- **reviewStars**: `2`\n  - A rating given by the user, typically on a scale, indicating their level of satisfaction.\n\n- **feedbackId**: `feedbackId`\n  - A unique identifier for the feedback that is being updated.\n\nThis structure allows for comprehensive updating of feedback for a particular action, providing an efficient way to manage user interactions with content."
      },
      "response": []
    },
    {
      "name": "Action - Feedback - Get",
      "protocolProfileBehavior": {
        "disableBodyPruning": true
      },
      "request": {
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "key": "token",
              "value": "BearerToken",
              "type": "string"
            }
          ]
        },
        "method": "GET",
        "header": [
          {
            "key": "",
            "value": "",
            "type": "default",
            "disabled": true
          }
        ],
        "body": {
          "mode": "raw",
          "raw": ""
        },
        "url": {
          "raw": "http://localhost:3000/api/action/feedback/get/?feedbackId=feedbackId&sessionId=sessionId&accountId=accountId",
          "host": [
            "localhost:3000"
          ],
          "path": [
            "api",
            "action",
            "feedback",
            "get",
            ""
          ],
          "query": [
            {
              "key": "feedbackId",
              "value": "feedbackId"
            },
            {
              "key": "sessionId",
              "value": "sessionId"
            },
            {
              "key": "accountId",
              "value": "accountId"
            }
          ]
        },
        "description": "### Description of the Endpoint Data\n\n**Name:**  \n- This identifies the operation as \"Action - Feedback - Get,\" indicating that it retrieves feedback data.\n\n**Request:**  \nThis section contains all the details required to make the API request.\n\n- **Auth:**  \n  - **Type:** Bearer - This means that the request uses bearer token authentication, which is a common method for securing APIs.\n  - **Bearer:**  \n    - **Key:** Token - This specifies that the key used for the bearer authentication is \"token.\"\n    - **Value:** BearerToken - This is a placeholder for the actual token needed to authorize the request. It should be replaced with a valid token before making the request.\n    - **Type:** String - Indicates that the value of the token is a string.\n\n- **Method:**  \n  - This specifies the HTTP method to be used for the API request. In this case, it is set to \"GET,\" which means the request is for retrieving data.\n\n- **URL:**  \n  - This is the endpoint to which the request is sent. It consists of:\n    - Base URL: `http://localhost:3000/api/action/feedback/get/` - This is the server address and endpoint.\n    - Query Parameters:\n      - **feedbackId:** This parameter should be provided to specify the ID of the feedback you want to retrieve.\n      - **sessionId:** This parameter should be provided to specify the session ID related to the feedback.\n      - **accountId:** This parameter should be provided to specify the account ID associated with the feedback.\n  \n- **Headers:**  \n  - An array of headers that can be sent along with the request. \n    - Currently, there is an empty header entry with default type. It is marked as disabled, meaning it will not be sent with the request.\n\n- **Body:**  \n  - **Mode:** Raw - This indicates the format of the body, which is set to raw text input.\n  - **Raw:** This section is currently empty, which means no additional data needs to be sent in the body of the GET request. \n\nThis endpoint is designed to fetch feedback data based on the provided parameters and requires a valid bearer token for authentication."
      },
      "response": []
    },
    {
      "name": "Action - Feedback - Get All",
      "protocolProfileBehavior": {
        "disableBodyPruning": true
      },
      "request": {
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "key": "token",
              "value": "BearerToken",
              "type": "string"
            }
          ]
        },
        "method": "GET",
        "header": [
          {
            "key": "",
            "value": "",
            "type": "default",
            "disabled": true
          }
        ],
        "body": {
          "mode": "raw",
          "raw": ""
        },
        "url": {
          "raw": "http://localhost:3000/api/action/feedback/all/?sessionId=sessionId&accountId=accountId",
          "host": [
            "localhost:3000"
          ],
          "path": [
            "api",
            "action",
            "feedback",
            "all",
            ""
          ],
          "query": [
            {
              "key": "sessionId",
              "value": "sessionId"
            },
            {
              "key": "accountId",
              "value": "accountId"
            }
          ]
        },
        "description": "### Action - Feedback - Get All\n\n**Request Authorization**\n- **Auth Type**: Bearer\n  - **Key**: `\"token\"` - This is the authorization token required for accessing the endpoint. It should be prefixed with \"Bearer \" followed by the actual token value to ensure proper authentication.\n\n**Request Method**\n- **Method**: `GET` - This indicates that the HTTP method used for this request is GET. This is typically used to request data from a specified resource.\n\n**Request URL**\n- **URL**: `http://localhost:3000/api/action/feedback/all/?sessionId=sessionId&accountId=accountId` \n  - This is the endpoint where the request is sent. It includes two query parameters:\n    - `sessionId`: This parameter should be replaced with the actual session identifier to specify which session the feedback relates to.\n    - `accountId`: This parameter should be replaced with the actual account identifier to specify which account’s feedback is being requested.\n\n**Request Headers**\n- **Headers**: An array of header objects.\n  - Currently, there are no headers specified for this request. However, this section is ready for any additional headers you might need to include in the future.\n\n**Request Body**\n- **Body Mode**: `raw` - This indicates the format of the request body.\n- **Raw Body**: Empty - There is no body content required for this GET request, as it is used solely to retrieve data.\n\nThis endpoint allows users to fetch all feedback records associated with a specific session and account. The required parameters must be included in the query string for the request to be processed successfully."
      },
      "response": []
    },
    {
      "name": "Action - Feedback - Delete",
      "request": {
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "key": "token",
              "value": "sessionId",
              "type": "string"
            }
          ]
        },
        "method": "POST",
        "header": [
          {
            "key": "",
            "value": "",
            "type": "default",
            "disabled": true
          }
        ],
        "body": {
          "mode": "raw",
          "raw": "{\"sessionId\":\"sessionId\",\"accountId\":\"accountId\",\"feedbackId\":\"feedbackId\"}"
        },
        "url": {
          "raw": "http://localhost:3000/api/action/feedback/delete",
          "host": [
            "localhost:3000"
          ],
          "path": [
            "api",
            "action",
            "feedback",
            "delete"
          ]
        },
        "description": "{\n  \"name\": \"Action - Feedback - Delete\",\n  \"description\": {\n    \"request\": {\n      \"auth\": {\n        \"type\": \"bearer\",\n        \"bearer\": [\n          {\n            \"key\": \"token\",\n            \"value\": \"sessionId\",\n            \"type\": \"string\"\n          }\n        ]\n      },\n      \"method\": \"POST\",\n      \"url\": \"http://localhost:3000/api/action/feedback/delete\",\n      \"headers\": [\n        {\n          \"key\": \"\",\n          \"value\": \"\",\n          \"type\": \"default\",\n          \"disabled\": true\n        }\n      ],\n      \"body\": {\n        \"mode\": \"raw\",\n        \"raw\": \"{\\\"sessionId\\\":\\\"sessionId\\\",\\\"accountId\\\":\\\"accountId\\\",\\\"feedbackId\\\":\\\"feedbackId\\\"}\"\n      }\n    },\n    \"details\": {\n      \"method\": \"POST\": \"This indicates that the API endpoint expects a POST request, which is commonly used for sending data to the server.\",\n      \"url\": \"http://localhost:3000/api/action/feedback/delete\": \"This is the URL of the API endpoint where the feedback deletion request is sent. It's set to a local server address.\",\n      \"auth\": \"Authentication is done using a bearer token. The token needs to be included in the request to verify the user's identity.\",\n      \"token\": \"A token labeled 'sessionId' is used as part of the authentication process to grant access to the deletion functionality.\",\n      \"headers\": [\n        {\n          \"key\": \"\": \"This placeholder is meant for any additional headers that may be required for the request. Currently, it is empty and disabled.\"\n        }\n      ],\n      \"body\": {\n        \"mode\": \"raw\": \"The body of the request is sent as raw JSON data.\",\n        \"raw\": \"{\\\"sessionId\\\":\\\"sessionId\\\",\\\"accountId\\\":\\\"accountId\\\",\\\"feedbackId\\\":\\\"feedbackId\\\"}\": \"This raw JSON structure contains three fields: 'sessionId' for the user's session, 'accountId' for the specific account associated with the feedback, and 'feedbackId' for the feedback entry that is to be deleted. These must be replaced with actual values when making the request.\"\n      }\n    }\n  }\n}"
      },
      "response": []
    }
  ]
}